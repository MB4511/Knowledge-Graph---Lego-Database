Cypher Queries for exploring dataset and exploring some insights// Average Star Rating by year MATCH(S:Set)-[:has_details]- > (i:information)                                return S.year as Year, avg(toint(i.star_rating)) as avgrating order by Year desc// Most popular themes per year (Panel form)Match (s:Set)-[:HAS_THEME]-(t:Theme) return s.year as year, t.name as theme, count(t.name) as frequency order by year desc, frequency desc// Top 3 themes per year (Using Collect functionality)match (s:Set)-[:HAS_THEME]-(t:Theme) with s.year as year, t.name as theme, count(t.name) as frequency order by year desc, frequency desc return year, collect(theme)[0..3] as top3themesperyear// Total number of colors used per themeMATCH (Color) < - [:HAS_COLOR]-(InventoryPart)-[:ASSOCIATED_INVENTORY]->(Inventory)-[:INVENTORY_FOR]->(Set)-[:HAS_THEME]-(Theme)                      RETURN Theme.name as theme, count(Color.name) as totalcountofcolors// Number of Distinct colors used per themeMATCH (Color) < - [:HAS_COLOR]-(InventoryPart)-[:ASSOCIATED_INVENTORY]->(Inventory)-[:INVENTORY_FOR]->(Set)-[:HAS_THEME]-(Theme)                      RETURN Theme.name as theme, count(distinct Color.name) as distinctcolors order by distinctcolors desc// Colors used in each theme sorted by count (Panel form) MATCH (Color) < - [:HAS_COLOR]-(InventoryPart)-[:ASSOCIATED_INVENTORY]->(Inventory)-[:INVENTORY_FOR]->(Set)-[:HAS_THEME]-(Theme)                      RETURN Theme.name as theme, Color.name as color, count(*) as usage order by theme, usage desc// List of colors used per theme sorted in descending order of usage (collected in a list)MATCH (Color) < - [:HAS_COLOR]-(InventoryPart)-[:ASSOCIATED_INVENTORY]->(Inventory)-[:INVENTORY_FOR]->(Set)-[:HAS_THEME]-(Theme)                      WITH Theme.name as theme, Color.name as color, count(*) as usage order by theme, usage desc                                                              RETURN theme, collect(color) as listofcolors order by size(listofcolors) desc// Most used color per theme (collect[0] from sorted list)MATCH (Color) < - [:HAS_COLOR]-(InventoryPart)-[:ASSOCIATED_INVENTORY]->(Inventory)-[:INVENTORY_FOR]->(Set)-[:HAS_THEME]-(Theme)                      WITH Theme.name as theme, Color.name as color, count(*) as usage order by theme, usage desc                                                              RETURN theme, collect(color)[0] as mostusedcolor// Finding out which color is the most used color in all themes?MATCH (Color) < - [:HAS_COLOR]-(InventoryPart)-[:ASSOCIATED_INVENTORY]->(Inventory)-[:INVENTORY_FOR]->(Set)-[:HAS_THEME]-(Theme)                      WITH Theme.name as theme, Color.name as color, count(*) as usage order by theme, usage desc                                                              With theme, collect(color)[0] as mostusedcolor                                Return mostusedcolor as Color, count(*) as frequency order by frequency desc// Top 5 colors used per theme (using[0..n] functionality)MATCH (Color) < - [:HAS_COLOR]-(InventoryPart)-[:ASSOCIATED_INVENTORY]->(Inventory)-[:INVENTORY_FOR]->(Set)-[:HAS_THEME]-(Theme)                      WITH Theme.name as theme, Color.name as color, count(*) as usage order by theme, usage desc                                                              Return theme, collect(color)[0..5] as top5colorsused// Prominent 5 colors used together? MATCH (Color) < - [:HAS_COLOR]-(InventoryPart)-[:ASSOCIATED_INVENTORY]->(Inventory)-[:INVENTORY_FOR]->(Set)-[:HAS_THEME]-(Theme)                      WITH Theme.name as theme, Color.name as color, count(*) as usage order by theme, usage desc                                                              With theme, collect(color)[0..5] as top5colorsused                            RETURN top5colorsused, count(*) as occurence order by occurence desc